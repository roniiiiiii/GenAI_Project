# -*- coding: utf-8 -*-
"""comparer

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1msLSPxcCmuFnCQxdGGLsvZYRd2b0eHgX
"""

import streamlit as st
from utils import load_image_and_metadata, get_ai_analysis

def set_custom_styles():
    st.markdown(
        """
        <style>
        /* Import Google Fonts */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Georgia:wght@400;700&display=swap');

        /* === Global & Base Styles === */

        /* Force body and the main Streamlit container to the desired background */
        body, html, #root, .stApp, .stApp > div:last-child {
            background-color: #FFEBAD !important;
            color: #333333 !important; /* Ensure default text color is correct */
            color-scheme: light !important; /* Force light color scheme to prevent dark mode defaults */
        }

        /* Crucial: Target the specific problematic Streamlit container */
        .st-emotion-cache-13k62yr {
            background: #FFEBAD !important; /* Override the dark blue background */
            color: #333333 !important; /* Ensure text color is dark */
            color-scheme: light !important; /* Crucial: Override dark color-scheme */
        }

        /* Header styling (make it disappear as it contains no elements) */
        header[data-testid="stHeader"] {
            background-color: #FFEBAD !important;
            height: 0px !important;
            min-height: 0px !important; /* Ensure minimal height */
            border-bottom: none !important;
            padding: 0 !important;
            margin: 0 !important;
        }

        /* Main content container (block-container) */
        .block-container {
            background-color: #FFEBAD !important;
            padding-top: 1rem;
            padding-bottom: 1rem;
            padding-left: 3rem;
            padding-right: 3rem;
        }

        /* All text elements */
        body, .stApp, .stApp *,
        /* Also target generic Streamlit text classes to ensure color consistency */
        .stMarkdown, .stText, .stLabel {
            font-family: 'Inter', sans-serif !important;
            color: #333333 !important;
        }

        /* Headers */
        h1, h2, h3, h4, h5, h6 {
            color: #333333 !important;
            font-family: 'Georgia', serif !important;
        }

        /* === Aggressive Streamlit DIV Resets === */
        /* Make almost all Streamlit-generated divs transparent and borderless by default. */
        /* This is to combat any other hidden dark backgrounds */
        div[data-testid],
        div[data-testid^="stVerticalBlock"],
        div[data-testid^="stHorizontalBlock"],
        .st-emotion-cache-*, /* Target all dynamic Streamlit classes */
        div.stMarkdown,
        div.stFileUploader,
        div.stSelectbox,
        div.stButton,
        div.stExpander,
        div.stChatInput,
        div.stChatMessage,
        div.stCode,
        div.element-container,
        div.main,
        div.stApp > div {
            background-color: transparent !important;
            border: none !important;
            box-shadow: none !important;
        }

        /* === Custom Component Styles === */

        /* File uploader dropzone (the area where you drag files) */
        /* Needs background and dashed border *within* the transparent parent */
        [data-testid="stFileUploaderDropzone"] {
            background-color: #FFEBAD !important; /* Matches main background */
            border: 2px dashed #C3BEF7 !important; /* Dashed border for visual cue */
            border-radius: 6px !important;
            color: #333333 !important;
            padding: 20px !important;
        }

        /* Browse files button inside uploader */
        [data-testid="stFileUploaderDropzone"] button {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            border: none !important;
            border-radius: 4px !important;
            padding: 8px 16px !important;
            font-weight: 600 !important;
        }

        /* FIX 1: Selectbox styling - target the dark blue background */
        .stSelectbox [data-baseweb="select"] {
            background-color: #C3BEF7 !important; /* Light purple background */
            border: none !important; /* Remove stroke */
            box-shadow: none !important;
            border-radius: 8px !important;
        }

        /* Selectbox input field */
        .stSelectbox input {
            background-color: transparent !important;
            color: #333333 !important;
            border: none !important;
            box-shadow: none !important;
        }

        /* Additional selectbox container targeting */
        .stSelectbox > div > div {
            background-color: #C3BEF7 !important;
            border: none !important;
            border-radius: 8px !important;
        }

        /* Target the specific selectbox control element */
        .stSelectbox [data-baseweb="select"] > div {
            background-color: #C3BEF7 !important;
            border: none !important;
        }

        /* Selectbox options dropdown */
        [data-baseweb="popover"] {
            background-color: #FFEBAD !important;
        }

        /* Selectbox options */
        [role="option"] {
            background-color: #FFEBAD !important;
            color: #333333 !important;
        }

        /* Selectbox options on hover */
        [role="option"]:hover {
            background-color: #ffda66 !important;
        }

        /* FIX 2: API Key Input Field in Sidebar */
        /* Target the text input field for API key */
        [data-testid="stTextInput"] input {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            border: none !important;
            border-radius: 8px !important;
            box-shadow: none !important;
        }

        /* Text input container */
        [data-testid="stTextInput"] > div {
            background-color: #C3BEF7 !important;
            border: none !important;
            border-radius: 8px !important;
        }

        /* Target the password input field specifically */
        [data-testid="stTextInput"] [data-baseweb="input"] {
            background-color: #C3BEF7 !important;
            border: none !important;
            border-radius: 8px !important;
        }

        /* Target the input wrapper */
        [data-testid="stTextInput"] [data-baseweb="base-input"] {
            background-color: #C3BEF7 !important;
            border: none !important;
            border-radius: 8px !important;
        }

        /* Target the eye icon button in password field - SPECIFIC FIX */
        [data-testid="stTextInput"] button[aria-label="Show password text"] {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            border: none !important;
        }

        /* Target the eye icon button with Streamlit classes */
        [data-testid="stTextInput"] button.st-b4 {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            border: none !important;
        }

        /* Additional targeting for password input components */
        .stTextInput div[data-baseweb="input"],
        .stTextInput div[data-baseweb="base-input"] {
            background-color: #C3BEF7 !important;
            border: none !important;
        }

        /* Target all buttons within text input */
        [data-testid="stTextInput"] button {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            border: none !important;
        }

        /* FIX 3: Bottom chat input section - fix the dark background */
        /* Target the chat input container more specifically */
        [data-testid="stChatInput"] {
            background-color: #FFEBAD !important; /* Match main background */
            border: 2px solid #C3BEF7 !important; /* Desired single border */
            border-radius: 8px !important;
            box-shadow: none !important;
        }

        /* Target the parent container of chat input that might have dark background */
        [data-testid="stChatInput"] > div,
        [data-testid="stChatInput"] .st-emotion-cache-* {
            background-color: #FFEBAD !important;
            border: none !important;
        }

        /* Remove any internal borders/backgrounds from chat input elements */
        [data-testid="stChatInput"] .st-emotion-cache-s1k4sy,
        [data-testid="stChatInput"] [data-baseweb="textarea"],
        [data-testid="stChatInput"] [data-baseweb="base-input"],
        [data-testid="stChatInput"] textarea
        {
            border: none !important;
            background-color: transparent !important;
            box-shadow: none !important;
        }

        /* Chat input field text color */
        [data-testid="stChatInput"] input,
        [data-testid="stChatInput"] textarea {
            color: #333333 !important;
        }

        /* Chat input placeholder text */
        [data-testid="stChatInput"] input::placeholder,
        [data-testid="stChatInput"] textarea::placeholder {
            color: #666666 !important;
        }

        /* Additional fix for chat input bottom section */
        .stChatInput {
            background-color: #FFEBAD !important;
        }

        /* Target any sticky footer or bottom container */
        [data-testid="stBottom"],
        .stChatInput [data-testid="stBottom"],
        div[style*="position: sticky"] {
            background-color: #FFEBAD !important;
        }

        /* AGGRESSIVE FIX: Target the bottom sticky container that holds chat input */
        /* This targets the dark blue bottom section */
        div[data-testid="stBottom"] {
            background-color: #FFEBAD !important;
            border-top: none !important;
        }

        /* Additional targeting for the bottom section container */
        .stChatInput div[data-testid="stBottom"] {
            background-color: #FFEBAD !important;
        }

        /* Target the specific bottom container element */
        div[style*="position: sticky"][style*="bottom: 0"] {
            background-color: #FFEBAD !important;
        }

        /* NEW FIX: Target the specific bottom block container that's causing the dark blue background */
        [data-testid="stBottomBlockContainer"] {
            background-color: #FFEBAD !important;
            border-top: none !important;
        }

        /* Target the emotion cache class for the bottom container */
        .st-emotion-cache-qdbtli {
            background-color: #FFEBAD !important;
            border-top: none !important;
        }

        /* Additional targeting for all elements within the bottom container */
        [data-testid="stBottomBlockContainer"] * {
            background-color: transparent !important;
        }

        /* Ensure the vertical block wrapper within bottom container is transparent */
        [data-testid="stBottomBlockContainer"] [data-testid="stVerticalBlockBorderWrapper"] {
            background-color: transparent !important;
        }

        /* Chat messages container */
        [data-testid="stChatMessageContainer"] {
            background-color: #FFEBAD !important;
        }

        /* Individual chat messages */
        [data-testid="chatMessage"] {
            background-color: #FFEBAD !important;
        }

        /* Regular buttons */
        .stButton > button {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            border: none !important;
            border-radius: 8px !important;
            font-weight: 600 !important;
            padding: 0.5em 1em !important;
            box-shadow: none !important;
        }

        /* Images */
        img {
            max-height: 500px;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }

        /* Expander headers */
        [data-testid="stExpander"] details summary {
            background-color: #C3BEF7 !important;
            color: #333333 !important;
            font-weight: 600 !important;
            padding: 10px !important;
            border-radius: 8px !important;
            border: none !important;
        }

        /* Sidebar styling */
        [data-testid="stSidebar"] {
            background-color: #FFEBAD !important;
            border-right: none !important;
        }

        [data-testid="stSidebar"] * {
            color: #333333 !important;
        }

        /* Analysis sections - Specific to comparer, but good to have consistency */
        .analysis-section {
            background-color: #FFFBEC;
            border: 2px solid #EADCA6;
            border-radius: 15px;
            padding: 20px;
            margin: 20px 0;
            box-shadow: none !important;
        }


        /* Final catch-all for any stubborn dark/blue/grey backgrounds */
        [style*="background-color: rgb(14, 17, 23)"],
        [style*="background-color: rgb(38, 39, 48)"],
        [style*="background-color: rgb(49, 51, 63)"],
        [style*="background-color: rgb(240, 242, 246)"],
        [style*="background-color: rgb(250, 250, 250)"]
        {
            background-color: #FFEBAD !important;
        }

        /* Additional aggressive targeting for dark backgrounds */
        div[style*="background"] {
            background-color: #FFEBAD !important;
        }
        </style>
        """,
        unsafe_allow_html=True
    )

def compare_two_artworks(client, metadata, image_data):
    set_custom_styles()

    st.title("Compare Two Artworks")

    image_ids = [fname.replace(".jpg", "") for fname in image_data.keys()]

    col1, col2 = st.columns(2)

    with col1:
        st.markdown('<div class="section-box">', unsafe_allow_html=True)
        st.markdown("### First Artwork")
        selected_id1 = st.selectbox("Select first artwork", image_ids, key="art1")
        st.markdown('</div>', unsafe_allow_html=True) # Close the div for first artwork

    with col2:
        st.markdown('<div class="section-box">', unsafe_allow_html=True)
        st.markdown("### Second Artwork")
        selected_id2 = st.selectbox("Select second artwork", image_ids, key="art2")
        st.markdown('</div>', unsafe_allow_html=True) # Close the div for second artwork

    if selected_id1 and selected_id2 and selected_id1 != selected_id2:
        image1, _, meta1 = load_image_and_metadata(metadata, image_id=selected_id1)
        image2, _, meta2 = load_image_and_metadata(metadata, image_id=selected_id2)

        # Display images side by side
        st.markdown("## Artworks Comparison")
        col1, col2 = st.columns(2)

        with col1:
            st.image(image1, caption=meta1.get('name', 'Artwork 1') if meta1 else 'Artwork 1', use_column_width=True)
            if meta1:
                st.markdown(f"""
                **Artist:** {meta1.get('artist', 'Unknown')}
                **Year:** {meta1.get('year', 'Unknown')}
                **Nationality:** {meta1.get('nationality', 'Unknown')}
                """)

        with col2:
            st.image(image2, caption=meta2.get('name', 'Artwork 2') if meta2 else 'Artwork 2', use_column_width=True)
            if meta2:
                st.markdown(f"""
                **Artist:** {meta2.get('artist', 'Unknown')}
                **Year:** {meta2.get('year', 'Unknown')}
                **Nationality:** {meta2.get('nationality', 'Unknown')}
                """)

        # AI Analysis section
        st.markdown("## AI Analysis")

        col1, col2 = st.columns(2)

        with col1:
            st.markdown("### First Artwork Analysis")
            with st.spinner("Analyzing first artwork..."):
                analysis1 = get_ai_analysis(client, image1)
            st.markdown(f'<div class="analysis-section">{analysis1}</div>', unsafe_allow_html=True)

        with col2:
            st.markdown("### Second Artwork Analysis")
            with st.spinner("Analyzing second artwork..."):
                analysis2 = get_ai_analysis(client, image2)
            st.markdown(f'<div class="analysis-section">{analysis2}</div>', unsafe_allow_html=True)

        # Comparative analysis
        st.markdown("## 🔍 Comparative Analysis")
        with st.spinner("Generating comparative analysis..."):
            comparative_prompt = f"""
            Compare these two feminist artworks based on the following analyses:

            Artwork 1: {meta1.get('name', 'Unknown') if meta1 else 'Unknown'}
            Analysis: {analysis1}

            Artwork 2: {meta2.get('name', 'Unknown') if meta2 else 'Unknown'}
            Analysis: {analysis2}

            Provide a thoughtful comparison focusing on similarities, differences, artistic techniques, themes, and cultural contexts.
            """

            comparison_response = client.chat.completions.create(
                model="gpt-4o",
                messages=[{"role": "user", "content": comparative_prompt}],
                max_tokens=1024
            )
            comparison = comparison_response.choices[0].message.content

        st.markdown(f'<div class="analysis-section">{comparison}</div>', unsafe_allow_html=True)

    else:
        st.info("Please select two different artworks to compare.")